[tool.poetry]
name = "go-integrator-api"
version = "1.0.0"
description = ""
authors = ["Beto Figueiredo"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12.2"
alembic = "^1.13.1"
attrs = "^23.2.0"
asyncpg = "^0.29.0"
pydantic = { extras = ["email"], version = "^2.6.4" }
python-dotenv = "^1.0.1"
pendulum = "^3.0.0"
fastapi = "^0.110.0"
sqlalchemy = "^2.0.28"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
gunicorn = "^21.2.0"
uvloop = "^0.19.0"
httptools = "^0.6.1"
nanoid = "^2.0.0"
fastapi-cli = "^0.0.4"

[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
pylint = "^3.1.0"
ruff = "^0.3.4"
mypy = "^1.10.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
sqlalchemy = { extras = ["mypy"], version = "^2.0.31" }

[tool.mypy]
exclude = "src/migrations"
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true
check_untyped_defs = true
incremental = false
strict = true
warn_return_any = false
warn_redundant_casts = true
warn_unreachable = true
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pyright]
venvPath = "/home/beto/.cache/pypoetry/virtualenvs/"
venv = "go-integrator-api-DRNAIdsF-py3.12"

[tool.taskipy.tasks]
start = { cmd = "fastapi dev src/main.py", help = "start dev server" }
test = { cmd = "python3 -m pytest -vv", help = "runs all unit tests" }
create_migration = { cmd = "docker compose exec api alembic revision --autogenerate -m", help = "create new migration" }
run_migrations = { cmd = "docker compose exec api alembic upgrade head", help = "run migrations" }
undo_last_migration = { cmd = "docker compose exec api alembic downgrade -1", help = "undo last migration" }
mypy = { cmd = "mypy", help = "runs mypy" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
